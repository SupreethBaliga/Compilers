digraph "" {
	graph [bb="0,0,0,0"];
	node [label="\N"];
	{
		graph [rank=same];
		2		 [label=main];
	}
	{
		graph [rank=same];
		5		 [label=a];
		6		 [label=9];
		5 -> 6		 [style=invis];
	}
	{
		graph [rank=same];
		7		 [label="=int"];
	}
	{
		graph [rank=same];
		9		 [label=a];
		10		 [label=10];
		9 -> 10		 [style=invis];
	}
	{
		graph [rank=same];
		16		 [label=a];
		17		 [label=9];
		16 -> 17		 [style=invis];
	}
	{
		graph [rank=same];
		20		 [label=k];
		21		 [label=10];
		20 -> 21		 [style=invis];
	}
	{
		graph [rank=same];
		22		 [label="=int"];
	}
	{
		graph [rank=same];
		24		 [label=k];
		26		 [label=9];
		24 -> 26		 [style=invis];
	}
	{
		graph [rank=same];
		23		 [label=";"];
		25		 [label="=int"];
		23 -> 25		 [style=invis];
	}
	{
		graph [rank=same];
		27		 [label=";"];
	}
	{
		graph [rank=same];
		31		 [label=d];
		33		 [label=10];
		31 -> 33		 [style=invis];
	}
	{
		graph [rank=same];
		32		 [label="=int"];
	}
	{
		graph [rank=same];
		34		 [label=";"];
	}
	{
		graph [rank=same];
		18		 [label="=="];
		28		 [label=SCOPE];
		18 -> 28		 [style=invis];
		35		 [label=SCOPE];
		28 -> 35		 [style=invis];
	}
	{
		graph [rank=same];
		11		 [label="< int"];
		36		 [label="IF-ELSE"];
		11 -> 36		 [style=invis];
	}
	{
		graph [rank=same];
		8		 [label=";"];
		37		 [label="IF-ELSE"];
		8 -> 37		 [style=invis];
	}
	{
		graph [rank=same];
		38		 [label=";"];
	}
	{
		graph [rank=same];
		3		 [label=DDFuncCall];
		39		 [label=SCOPE];
		3 -> 39		 [style=invis];
	}
	0	 [label=SourceNode];
	40	 [label=FUNC];
	0 -> 40;
	3 -> 2;
	7 -> 5;
	7 -> 6;
	8 -> 7;
	11 -> 9;
	11 -> 10;
	18 -> 16;
	18 -> 17;
	22 -> 20;
	22 -> 21;
	23 -> 22;
	25 -> 24;
	25 -> 26;
	27 -> 23;
	27 -> 25;
	28 -> 27;
	32 -> 31;
	32 -> 33;
	34 -> 32;
	35 -> 34;
	36 -> 18;
	36 -> 28;
	36 -> 35;
	37 -> 11;
	37 -> 36;
	38 -> 8;
	38 -> 37;
	39 -> 38;
	40 -> 3;
	40 -> 39;
}
