digraph "" {
	graph [bb="0,0,0,0"];
	node [label="\N"];
	{
		graph [rank=same];
		4	[label=";"];
		5	[label=EmptyExprStmt];
		4 -> 5	[style=invis];
	}
	{
		graph [rank=same];
		8	[label=i];
		9	[label=0];
		8 -> 9	[style=invis];
	}
	{
		graph [rank=same];
		11	[label=j];
		12	[label=0];
		11 -> 12	[style=invis];
	}
	{
		graph [rank=same];
		10	[label="="];
		13	[label="="];
		10 -> 13	[style=invis];
	}
	{
		graph [rank=same];
		7	[label=int];
		14	[label=","];
		7 -> 14	[style=invis];
	}
	{
		graph [rank=same];
		6	[label=";"];
		15	[label=TypeDecl];
		6 -> 15	[style=invis];
	}
	{
		graph [rank=same];
		17	[label=i];
		19	[label=0];
		17 -> 19	[style=invis];
	}
	{
		graph [rank=same];
		20	[label=i];
		21	[label=10];
		20 -> 21	[style=invis];
	}
	{
		graph [rank=same];
		18	[label="="];
		22	[label="<"];
		18 -> 22	[style=invis];
		24	[label="POST++"];
		22 -> 24	[style=invis];
		25	[label=EmptySCOPE];
		24 -> 25	[style=invis];
	}
	{
		graph [rank=same];
		16	[label=";"];
		26	[label=FOR];
		16 -> 26	[style=invis];
	}
	{
		graph [rank=same];
		28	[label=j];
		29	[label=10];
		28 -> 29	[style=invis];
	}
	{
		graph [rank=same];
		30	[label="<"];
		34	[label=SCOPE];
		30 -> 34	[style=invis];
	}
	{
		graph [rank=same];
		27	[label=";"];
		35	[label=WHILE];
		27 -> 35	[style=invis];
	}
	{
		graph [rank=same];
		37	[label=i];
		38	[label=j];
		37 -> 38	[style=invis];
	}
	{
		graph [rank=same];
		40	[label=5];
		41	[label=6];
		40 -> 41	[style=invis];
	}
	{
		graph [rank=same];
		43	[label=i];
		45	[label=1];
		43 -> 45	[style=invis];
	}
	{
		graph [rank=same];
		46	[label=i];
		48	[label=2];
		46 -> 48	[style=invis];
	}
	{
		graph [rank=same];
		42	[label=">"];
		44	[label="="];
		42 -> 44	[style=invis];
		47	[label="="];
		44 -> 47	[style=invis];
	}
	{
		graph [rank=same];
		39	[label=">"];
		49	[label="IF-ELSE"];
		39 -> 49	[style=invis];
	}
	{
		graph [rank=same];
		50	[label=IF];
		52	[label=abc];
		52 -> 50	[style=invis];
	}
	{
		graph [rank=same];
		36	[label=";"];
		51	[label="ID:"];
		36 -> 51	[style=invis];
	}
	{
		graph [rank=same];
		56	[label=j];
		58	[label=1];
		56 -> 58	[style=invis];
	}
	{
		graph [rank=same];
		55	[label=1];
		57	[label="="];
		55 -> 57	[style=invis];
	}
	{
		graph [rank=same];
		60	[label=";"];
		61	[label=BREAK];
		60 -> 61	[style=invis];
	}
	{
		graph [rank=same];
		64	[label=j];
		66	[label=2];
		64 -> 66	[style=invis];
	}
	{
		graph [rank=same];
		63	[label=2];
		65	[label="="];
		63 -> 65	[style=invis];
	}
	{
		graph [rank=same];
		62	[label=";"];
		67	[label="CASE:"];
		62 -> 67	[style=invis];
	}
	{
		graph [rank=same];
		68	[label=";"];
		69	[label=BREAK];
		68 -> 69	[style=invis];
	}
	{
		graph [rank=same];
		71	[label=j];
		73	[label=3];
		71 -> 73	[style=invis];
	}
	{
		graph [rank=same];
		70	[label=";"];
		74	[label="DEFAULT:"];
		70 -> 74	[style=invis];
	}
	{
		graph [rank=same];
		75	[label=";"];
		76	[label=BREAK];
		75 -> 76	[style=invis];
	}
	{
		graph [rank=same];
		54	[label=i];
		78	[label=SCOPE];
		54 -> 78	[style=invis];
	}
	{
		graph [rank=same];
		53	[label=";"];
		79	[label=SWITCH];
		53 -> 79	[style=invis];
	}
	{
		graph [rank=same];
		85	[label=i];
		86	[label=20];
		85 -> 86	[style=invis];
	}
	{
		graph [rank=same];
		84	[label=SCOPE];
		87	[label="<"];
		84 -> 87	[style=invis];
	}
	{
		graph [rank=same];
		80	[label=";"];
		88	[label="DO-WHILE"];
		80 -> 88	[style=invis];
	}
	{
		graph [rank=same];
		90	[label=i];
		91	[label=10];
		90 -> 91	[style=invis];
	}
	{
		graph [rank=same];
		92	[label="<"];
		96	[label=SCOPE];
		92 -> 96	[style=invis];
	}
	{
		graph [rank=same];
		89	[label=";"];
		97	[label=IF];
		89 -> 97	[style=invis];
	}
	{
		graph [rank=same];
		98	[label=";"];
		100	[label=RETURN];
		98 -> 100	[style=invis];
	}
	{
		graph [rank=same];
		0	[label=int];
		2	[label=DDFuncCall];
		0 -> 2	[style=invis];
		102	[label=SCOPE];
		2 -> 102	[style=invis];
	}
	1	[label=main];
	2 -> 1;
	3	[label=EmptyExprStmt];
	4 -> 3;
	6 -> 4;
	6 -> 5;
	10 -> 8;
	10 -> 9;
	13 -> 11;
	13 -> 12;
	14 -> 10;
	14 -> 13;
	15 -> 7;
	15 -> 14;
	16 -> 6;
	16 -> 15;
	18 -> 17;
	18 -> 19;
	22 -> 20;
	22 -> 21;
	23	[label=i];
	24 -> 23;
	26 -> 18;
	26 -> 22;
	26 -> 24;
	26 -> 25;
	27 -> 16;
	27 -> 26;
	30 -> 28;
	30 -> 29;
	31	[label=j];
	32	[label="POST++"];
	32 -> 31;
	33	[label=";"];
	33 -> 32;
	34 -> 33;
	35 -> 30;
	35 -> 34;
	36 -> 27;
	36 -> 35;
	39 -> 37;
	39 -> 38;
	42 -> 40;
	42 -> 41;
	44 -> 43;
	44 -> 45;
	47 -> 46;
	47 -> 48;
	49 -> 42;
	49 -> 44;
	49 -> 47;
	50 -> 39;
	50 -> 49;
	51 -> 50;
	51 -> 52;
	53 -> 36;
	53 -> 51;
	57 -> 56;
	57 -> 58;
	59	[label="CASE:"];
	59 -> 55;
	59 -> 57;
	60 -> 59;
	62 -> 60;
	62 -> 61;
	65 -> 64;
	65 -> 66;
	67 -> 63;
	67 -> 65;
	68 -> 62;
	68 -> 67;
	70 -> 68;
	70 -> 69;
	72	[label="="];
	72 -> 71;
	72 -> 73;
	74 -> 72;
	75 -> 70;
	75 -> 74;
	77	[label=";"];
	77 -> 75;
	77 -> 76;
	78 -> 77;
	79 -> 54;
	79 -> 78;
	80 -> 53;
	80 -> 79;
	81	[label=i];
	82	[label="POST++"];
	82 -> 81;
	83	[label=";"];
	83 -> 82;
	84 -> 83;
	87 -> 85;
	87 -> 86;
	88 -> 84;
	88 -> 87;
	89 -> 80;
	89 -> 88;
	92 -> 90;
	92 -> 91;
	93	[label=GOTO];
	94	[label=abc];
	93 -> 94;
	95	[label=";"];
	95 -> 93;
	96 -> 95;
	97 -> 92;
	97 -> 96;
	98 -> 89;
	98 -> 97;
	99	[label=0];
	100 -> 99;
	101	[label=";"];
	101 -> 98;
	101 -> 100;
	102 -> 101;
	103	[label=FUNC];
	103 -> 0;
	103 -> 2;
	103 -> 102;
	SourceNode -> 103;
}
